#!/bin/bash

source /etc/docker-gitlab/gitlab.conf

scriptfile=$(basename "$0")

function redis_is_running {
    if [[ "$(docker ps | grep redis:latest)" != "" ]] ; then
        return 0 
    else
        return 1
    fi
}

function redis_is_stopped {
    if [[ "$(docker ps | grep redis:latest)" = "" && "$(docker ps -a | grep redis)" != "" ]] ; then
        return 0 
    else
        return 1
    fi
}

function mysql_is_running {
    if [[ "$(docker ps | grep mysql:latest)" != "" ]] ; then
        return 0 
    else
        return 1
    fi
}

function mysql_is_stopped {
    if [[ "$(docker ps | grep mysql:latest)" = "" && "$(docker ps -a | grep mysql)" != "" ]] ; then
        return 0 
    else
        return 1
    fi
}

function gitlab_is_running {
    if [[ "$(docker ps | grep gitlab:"${CURRENT_VERSION}")" != "" ]] ; then
        return 0 
    else
        return 1
    fi
}

function gitlab_is_stopped {
    if [[ "$(docker ps | grep gitlab:"${CURRENT_VERSION}")" = "" && "$(docker ps -a | grep gitlab:"${CURRENT_VERSION}")" != "" ]] ; then
        return 0 
    else
        return 1
    fi
}

function start_redis {
    echo "Start Redis"
    [[ ! -d /opt/redis/data ]] && mkdir -p /opt/redis/data
    docker run --name=redis -d -v /opt/redis/data:/var/lib/redis sameersbn/redis:latest 1> /dev/null
}

function stop_redis {
    echo "Stop Redis"
    docker stop redis 1> /dev/null
}

function remove_redis {
    echo "Remove Redis"
    docker rm redis 1> /dev/null
}

function start_mysql {
    echo "Start MySQL"
    [[ ! -d /opt/mysql/data ]] && mkdir -p /opt/mysql/data
    docker run --name=mysql -d -p "${MYSQL_EXPORT_SSH_PORT}":22 -p "${MYSQL_EXPORT_HTTP_PORT}":3306 -v /opt/mysql/data:/var/lib/mysql sameersbn/mysql:latest 1> /dev/null
}

function stop_mysql {
    echo "Stop MySQL"
    docker stop mysql 1> /dev/null
}

function remove_mysql {
    echo "Remove MySQL"
    docker rm mysql 1> /dev/null
}

function start_gitlab {
    echo "Start Gitlab"
    [[ ! -d /opt/gitlab/data ]] && mkdir -p /opt/gitlab/data
    docker run --name=gitlab -d --link mysql:mysql --link redis:redisio -v /opt/gitlab/data:/home/git/data -p "${GITLAB_EXPORT_SSH_PORT}":22 -p "${GITLAB_EXPORT_HTTP_PORT}":80 -p "${GITLAB_EXPORT_HTTPS_PORT}":443 --env-file /etc/docker-gitlab/gitlab.conf sameersbn/gitlab:${CURRENT_VERSION} 1> /dev/null
}

function stop_gitlab {
    echo "Stop Gitlab"
    docker stop gitlab 1> /dev/null
}

function remove_gitlab {
    echo "Remove Gitlab"
    docker rm gitlab 1> /dev/null
}

function backup_gitlab {
    docker run --name=gitlab -it --rm --link mysql:mysql --link redis:redisio --env-file /etc/docker-gitlab/gitlab.conf -v /opt/gitlab/data:/home/git/data sameersbn/gitlab:"${CURRENT_VERSION}" app:rake gitlab:backup:create
}

function restore_gitlab {
    docker run --name=gitlab -it --rm --link mysql:mysql --link redis:redisio --env-file /etc/docker-gitlab/gitlab.conf -v /opt/gitlab/data:/home/git/data sameersbn/gitlab:"${CURRENT_VERSION}" app:rake gitlab:backup:restore
}

function start {
    if mysql_is_stopped; then remove_mysql; fi
    if redis_is_stopped; then remove_redis; fi
    if gitlab_is_stopped; then remove_gitlab; fi

    if ! mysql_is_running; then start_mysql; fi
    if ! redis_is_running; then start_redis; fi    
    if ! gitlab_is_running; then start_gitlab; fi
}

function stop {
    if gitlab_is_running; then stop_gitlab; fi
    if redis_is_running; then stop_redis; fi
    if mysql_is_running; then stop_mysql; fi

    if gitlab_is_stopped; then remove_gitlab; fi
    if redis_is_stopped; then remove_redis; fi
    if mysql_is_stopped; then remove_mysql; fi
}

function backup {
    if mysql_is_stopped; then remove_mysql; fi
    if ! mysql_is_running; then start_mysql; fi

    if redis_is_stopped; then remove_redis; fi
    if ! redis_is_running; then start_redis; fi

    if gitlab_is_running; then stop_gitlab; fi
    if gitlab_is_stopped; then remove_gitlab; fi

    backup_gitlab

    if ! gitlab_is_running; then start_gitlab; fi
}

function restore {
    if mysql_is_stopped; then remove_mysql; fi
    if ! mysql_is_running; then start_mysql; fi

    if redis_is_stopped; then remove_redis; fi
    if ! redis_is_running; then start_redis; fi

    if gitlab_is_running; then stop_gitlab; fi
    if gitlab_is_stopped; then remove_gitlab; fi

    restore_gitlab

    if ! gitlab_is_running; then start_gitlab; fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop
        start
        ;;
    backup)
        backup
        ;;
    restore)
        restore
        ;;
    *)
        echo "Usage: $scriptfile {start|stop|restart|backup|restore}"
        exit 1
        ;;
esac
exit $?
